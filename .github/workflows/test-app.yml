name: Vue-app

on:
  push:
    branches: [ 'main' ]
env:
  SSH_USER: 'pbulle'
  SSH_IP: '172.161.91.44'

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }} 
  cancel-in-progress: true

jobs:
  test-frontend:
    if: contains(github.event.head_commit.message, 'test-frontend')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./client

      - name: Build & test server frontend
        run: npm run build

      - name: Linter
        run: npm run lint
      
      - name: Install cypress dependencies
        run: sudo apt update && sudo apt install -y xvfb libnss3 libatk1.0-0 libatk-bridge2.0-0 libdrm2 libgbm1 libxcomposite1 libxdamage1 libxrandr2 libpango-1.0-0 libcups2 libxkbcommon0 libgtk-3-0

      - name: Start backend for e2e test
        run: cd ../server && npm install && npm run start &
      
      - name: e2e test
        run: npm run test:e2e

      - name: Dependencies Audit
        run: npm audit

  test-backend:
    if: contains(github.event.head_commit.message, 'test-backend')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./server

      - name: Linter
        run: npm run lint
      
      - name: Unit test
        run: npm run test:ci
      
      - name: Dependencies Audit
        run: npm audit

  deployment:
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install sshpass
        run: sudo apt install sshpass
      - name: Deploy to server
        run: |
          mkdir -p ~/.ssh 
          ssh-keyscan -H $SSH_IP >> ~/.ssh/known_hosts
          sshpass -p '${{ secrets.AZUREPASSWORD }}' scp -r ./server ${{ env.SSH_USER }}@${{ env.SSH_IP }}:/var/www
          sshpass -p '${{ secrets.AZUREPASSWORD }}' scp -r ./client ${{ env.SSH_USER }}@${{ env.SSH_IP }}:/var/www
          sshpass -p '${{ secrets.AZUREPASSWORD }}' ssh ${{ env.SSH_USER }}@${{ env.SSH_IP }} "cd /var/www/server && npm install -omit=dev"
          sshpass -p '${{ secrets.AZUREPASSWORD }}' ssh ${{ env.SSH_USER }}@${{ env.SSH_IP }} "cd /var/www/client && npm install"
          sshpass -p '${{ secrets.AZUREPASSWORD }}' ssh ${{ env.SSH_USER }}@${{ env.SSH_IP }} "cd /var/www/server && pm2 startOrRestart ecosystem.config.js --env production && pm2 save"
          sshpass -p '${{ secrets.AZUREPASSWORD }}' ssh ${{ env.SSH_USER }}@${{ env.SSH_IP }} "cd /var/www/client && pm2 startOrRestart --name "client" yarn -- dev --host && pm2 save"
